{\rtf1\ansi\ansicpg1252\cocoartf2578
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Sub AllStocksAnalysisRefactored()\
    Dim startTime As Single\
    Dim endTime  As Single\
    \
    yearValue = InputBox("What year would you like to run the analysis on?")\
    \
    startTime = Timer\
    \
    'Format the output sheet on All Stocks Analysis worksheet\
    Worksheets("All Stocks Analysis").Activate\
    Range("A1").Value = "All Stocks (" + yearValue + ")"\
    \
    'Create a header row\
    Cells(3, 1).Value = "Ticker"\
    Cells(3, 2).Value = "Total Daily Volume"\
    Cells(3, 3).Value = "Return"\
    \
    'Initialize array of all tickers\
    Dim tickers(12) As String\
    tickers(0) = "AY"\
    tickers(1) = "CSIQ"\
    tickers(2) = "DQ"\
    tickers(3) = "ENPH"\
    tickers(4) = "FSLR"\
    tickers(5) = "HASI"\
    tickers(6) = "JKS"\
    tickers(7) = "RUN"\
    tickers(8) = "SEDG"\
    tickers(9) = "SPWR"\
    tickers(10) = "TERP"\
    tickers(11) = "VSLR"\
    \
    'Activate data worksheet\
    Worksheets(yearValue).Activate\
    \
    'Get the number of rows to loop over\
    RowCount = Cells(Rows.Count, "A").End(xlUp).Row\
    \
    '1a) Create a ticker Index. Set to zero before looping through rows\
\
    Dim tickerIndex As Single\
    tickerIndex = 0\
\
    \
        \
    '1b) Create three output arrays\
    Dim tickerVolumes(12) As Long\
    Dim tickerStartingPrices(12) As Single\
    Dim tickerEndingPrices(12) As Single\
    \
    '2a) Create a for loop to initialize the tickerVolumes to zero. The tickerIndex is used to access the stock tickers, ticker starting prices, and ending prices\
    Worksheets(yearValue).Activate\
    For i = 0 To 11\
    tickerVolumes(i) = 0\
    tickerStartingPrices(tickerIndex) = 0\
    tickerEndingPrices(tickerIndex) = 0\
    Next i\
    \
    ''2b) Loop over all the rows in the spreadsheet.\
    For j = 2 To RowCount\
    \
        '3a) Increase volume for current ticker. Will shift the tickerIndex to next ticker if it doesn't match the previous row\'92s ticker.\
    \
            tickerVolumes(tickerIndex) = tickerVolumes(tickerIndex) + Cells(j, 8).Value\
    \
        \
        '3b) Check if the current row is the first row with the selected tickerIndex.\
        If Cells(j - 1, 1).Value <> tickers(tickerIndex) And Cells(j, 1).Value = tickers(tickerIndex) Then\
            'Store starting price value\
            tickerStartingPrices(tickerIndex) = Cells(j, 6).Value\
        End If\
        \
        '3c) check if the current row is the last row with the selected ticker\
         'If the next row\'92s ticker doesn\'92t match, increase the tickerIndex.\
        If Cells(j + 1, 1).Value <> tickers(tickerIndex) And Cells(j, 1).Value = tickers(tickerIndex) Then\
            'Store ending price Value\
            tickerEndingPrices(tickerIndex) = Cells(j, 6).Value\
    \
            tickerIndex = tickerIndex + 1\
        End If\
        \
        Next j\
        \
    '4) Loop through your arrays to output the Ticker, Total Daily Volume, and Return. Formatting the output for arrays.\
        Worksheets("All Stocks Analysis").Activate\
        For i = 0 To 11\
        tickerIndex = i\
        Cells(4 + i, 1).Value = tickers(tickerIndex)\
        Cells(4 + i, 2).Value = tickerVolumes(tickerIndex)\
        Cells(4 + i, 3).Value = tickerEndingPrices(tickerIndex) / tickerStartingPrices(tickerIndex) - 1\
        \
        'Fix percentage on return\
        With Range("C4:C15")\
            .NumberFormat = "0.0%"\
            .Value = .Value\
        End With\
        \
        Next i\
        \
    \
        \
    'Formatting\
    Worksheets("All Stocks Analysis").Activate\
    Range("A3:C3").Font.FontStyle = "Bold"\
    Range("A3:C3").Borders(xlEdgeBottom).LineStyle = xlContinuous\
    Range("B4:B15").NumberFormat = "#,##0"\
    Range("C4:C15").NumberFormat = "0.0%"\
    Columns("B").AutoFit\
    dataRowStart = 4\
    dataRowEnd = 15\
    \
    For i = dataRowStart To dataRowEnd\
        If Cells(i, 3) > 0 Then\
            Cells(i, 3).Interior.Color = vbGreen\
        Else\
            Cells(i, 3).Interior.Color = vbRed\
        End If\
    Next i\
    \
    endTime = Timer\
    MsgBox " This code ran in " & (endTime - startTime) & " seconds for the year " & (yearValue)\
End Sub\
}